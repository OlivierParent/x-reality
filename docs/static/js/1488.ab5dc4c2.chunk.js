"use strict";(self.webpackChunkx_reality=self.webpackChunkx_reality||[]).push([[1488],{6167:(e,t,n)=>{n.d(t,{A:()=>d});var r=n(259),o=n(7066),a=n(5819),i=n(4704),l=n(7313),s=n(4110),u=n(1724),c=n(7862),f=n(4662),m=n(6417);const d=e=>{let{children:t}=e;const n=(0,f.p)();return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(a.Xz,{camera:void 0,flat:n.flat,frameloop:n.frameloop,linear:n.linear,orthographic:!1,shadows:n.shadows,children:(0,m.jsxs)(l.Suspense,{children:[(0,m.jsx)(s.z,{}),(0,m.jsx)(u.Z,{}),(0,m.jsx)(c.u,{}),(0,m.jsx)(r.z,{enableDamping:!0,enablePan:!0,enableZoom:!0}),t]})}),(0,m.jsx)(i.Zf,{collapsed:!1,fill:!1,flat:!1,hidden:!1,oneLineLabels:!0,titleBar:!0}),(0,m.jsx)(o.a,{})]})}},1294:(e,t,n)=>{n.r(t),n.d(t,{default:()=>V});var r=n(6893),o=n(3002),a=n(7313),i=n(5825);function*l(){let e=0;const t=["#f00","#ff0","#0f0","#0ff","#00f","#f0f"];for(;;)yield t[e++%t.length]}var s=n(6417);var u=function(e){return e[e.HIGH=1]="HIGH",e[e.LOW=.75]="LOW",e}(u||{}),c=function(e){return e[e.LARGE=1.5]="LARGE",e[e.SMALL=1]="SMALL",e}(c||{});const f=new i.Vector3,m=l(),d=m.next().value,p=new i.Vector3,v=e=>{const t=(0,a.useRef)(null),[n,l]=(0,a.useState)(d),[v,g]=(0,a.useState)(!1),[h,w]=(0,a.useState)(f),x=(0,a.useCallback)((e=>{e.stopPropagation();const t=m.next().value,n=function(){const e=[5,4,0].map((e=>(2*Math.random()-1)*e));return(new i.Vector3).fromArray(e)}();l(t),w(n)}),[]),y=(0,a.useCallback)((e=>{e.stopPropagation(),g(!1)}),[]),S=(0,a.useCallback)((e=>{e.stopPropagation(),g(!0)}),[]);return(0,r.j)(v),(0,o.C)((e=>{let{clock:n}=e;t.current.position.lerp(h,.1);const r=n.getElapsedTime();t.current.rotation.set(r,r,r);const o=v?c.LARGE:c.SMALL;t.current.scale.lerp(p.setScalar(o),.1)})),(0,s.jsx)("group",{name:"Animated Cube Default",...e,children:(0,s.jsxs)("mesh",{onClick:x,onPointerOut:y,onPointerOver:S,ref:t,scale:c.SMALL,children:[(0,s.jsx)("boxGeometry",{args:[1,1,1]}),(0,s.jsx)("meshStandardMaterial",{color:n,opacity:v?u.HIGH:u.LOW,transparent:!0,wireframe:!1})]})})};var g=n(6644);var h=function(e){return e[e.HIGH=1]="HIGH",e[e.LOW=.75]="LOW",e}(h||{});const w=new i.Vector3,x=1.5,y=1,S=l(),P=S.next().value,b=e=>{const t=(0,a.useRef)(null),n=(0,a.useRef)(null),[l,u]=(0,a.useState)(P),[c,f]=(0,a.useState)(!1),[m,d]=(0,a.useState)(h.LOW),[p,v]=(0,a.useState)(w),[b,C]=(0,a.useState)(y),E=(0,a.useCallback)((e=>{e.stopPropagation();const t=S.next().value,n=function(){const e=[5,4,0].map((e=>(2*Math.random()-1)*e));return(new i.Vector3).fromArray(e)}();u(t),v(n)}),[]),A=(0,a.useCallback)((e=>{e.stopPropagation(),f(!1)}),[]),L=(0,a.useCallback)((e=>{e.stopPropagation(),f(!0)}),[]);return(0,r.j)(c),(0,a.useEffect)((()=>{const e=c?h.HIGH:h.LOW;d(e);C(c?x:y)}),[c]),(0,o.C)((e=>{let{clock:n}=e;const r=n.getElapsedTime();t.current.rotation.set(r,r,r)})),(0,s.jsx)("group",{name:"Animated Cube with Framer Motion 3D",...e,children:(0,s.jsxs)(g.E.mesh,{animate:{...p,scale:b},onClick:E,onPointerOut:A,onPointerOver:L,ref:t,transition:{duration:.25,scale:{duration:.125}},children:[(0,s.jsx)("boxGeometry",{args:[1,1,1]}),(0,s.jsx)(g.E.meshStandardMaterial,{animate:{color:l,opacity:m},ref:n,transition:{opacity:{delay:.125,duration:.125}},transparent:!0,wireframe:!1})]})})};var C=n(3589);var E=function(e){return e[e.HIGH=1]="HIGH",e[e.LOW=.75]="LOW",e}(E||{});const A=new i.Vector3,L={LARGE:(new i.Vector3).setScalar(1.5),SMALL:(new i.Vector3).setScalar(1)},M=l(),j=M.next().value,O={color:j},G=C.p8.timeline(),R=e=>{const t=(0,a.useRef)(null),n=(0,a.useRef)(null),[l,u]=(0,a.useState)(j),[c,f]=(0,a.useState)(!1),[m,d]=(0,a.useState)(A),p=(0,a.useCallback)((e=>{e.stopPropagation();const t=M.next().value,n=function(){const e=[5,4,0].map((e=>(2*Math.random()-1)*e));return(new i.Vector3).fromArray(e)}();u(t),d(n)}),[]),v=(0,a.useCallback)((e=>{e.stopPropagation(),f(!1)}),[]),g=(0,a.useCallback)((e=>{e.stopPropagation(),f(!0)}),[]);return(0,r.j)(c),(0,a.useEffect)((()=>{C.p8.to(O,{color:l,onUpdate:()=>{n.current.color.set(O.color)}})}),[l]),(0,a.useEffect)((()=>{const e=c?E.HIGH:E.LOW;G.to(n.current,{opacity:e,duration:.125});const r=c?L.LARGE:L.SMALL;G.to(t.current.scale,{...r,duration:.125})}),[c]),(0,a.useEffect)((()=>{C.p8.to(t.current.position,{...m,duration:.25})}),[m]),(0,o.C)((e=>{let{clock:n}=e;const r=n.getElapsedTime();t.current.rotation.set(r,r,r)})),(0,s.jsx)("group",{name:"Animated Cube with GreenSock GSAP",...e,children:(0,s.jsxs)("mesh",{onClick:p,onPointerOut:v,onPointerOver:g,ref:t,children:[(0,s.jsx)("boxGeometry",{args:[1,1,1]}),(0,s.jsx)("meshStandardMaterial",{ref:n,transparent:!0,wireframe:!1})]})})};var k=n(4704),_=n(5397),H=n(9817),I=function(e){return e.DEFAULT="\u2014Default\u2014",e.FRAMER_MOTION_3D="Framer Motion 3D",e.GREENSOCK_GSAP="GreenSock GSAP",e}(I||{});const N={[I.DEFAULT]:(0,s.jsx)(v,{}),[I.FRAMER_MOTION_3D]:(0,s.jsx)(b,{}),[I.GREENSOCK_GSAP]:(0,s.jsx)(R,{})},D=e=>{const{cube:t}=function(e,t){const{cube:n}=(0,k.M4)(_.O.SCHEMA.COMPONENTS,{cube:{label:"Animated Cube",options:e,value:t}},H.F.folder(_.O.ORDER.COMPONENTS));return{cube:n}}(N,N[I.FRAMER_MOTION_3D]);return(0,s.jsx)("group",{name:"Animated Cube",...e,children:t})};var F=n(6167);const V=e=>(0,s.jsx)(F.A,{children:(0,s.jsx)(D,{...e})})},3081:(e,t,n)=>{n.d(t,{P:()=>f});var r=n(7462),o=n(7313),a=n(5825),i=n(3002),l=n(4296),s=n(2362);class u extends a.ShaderMaterial{constructor(){super({uniforms:{depth:{value:null},opacity:{value:1},attenuation:{value:2.5},anglePower:{value:12},spotPosition:{value:new a.Vector3(0,0,0)},lightColor:{value:new a.Color("white")},cameraNear:{value:0},cameraFar:{value:1},resolution:{value:new a.Vector2(0,0)}},transparent:!0,depthWrite:!1,vertexShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      ",fragmentShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <".concat(s.i>=154?"colorspace_fragment":"encodings_fragment",">\n        }\n      ")})}}function c(e){let{opacity:t=1,radiusTop:n,radiusBottom:r,depthBuffer:l,color:s="white",distance:c=5,angle:f=.15,attenuation:m=5,anglePower:d=5}=e;const p=o.useRef(null),v=(0,i.A)((e=>e.size)),g=(0,i.A)((e=>e.camera)),h=(0,i.A)((e=>e.viewport.dpr)),[w]=o.useState((()=>new u)),[x]=o.useState((()=>new a.Vector3));n=void 0===n?.1:n,r=void 0===r?7*f:r,(0,i.C)((()=>{w.uniforms.spotPosition.value.copy(p.current.getWorldPosition(x)),p.current.lookAt(p.current.parent.target.getWorldPosition(x))}));const y=o.useMemo((()=>{const e=new a.CylinderGeometry(n,r,c,128,64,!0);return e.applyMatrix4((new a.Matrix4).makeTranslation(0,-c/2,0)),e.applyMatrix4((new a.Matrix4).makeRotationX(-Math.PI/2)),e}),[c,n,r]);return o.createElement(o.Fragment,null,o.createElement("mesh",{ref:p,geometry:y,raycast:()=>null},o.createElement("primitive",{object:w,attach:"material","uniforms-opacity-value":t,"uniforms-lightColor-value":s,"uniforms-attenuation-value":m,"uniforms-anglePower-value":d,"uniforms-depth-value":l,"uniforms-cameraNear-value":g.near,"uniforms-cameraFar-value":g.far,"uniforms-resolution-value":l?[v.width*h,v.height*h]:[0,0]})))}const f=o.forwardRef(((e,t)=>{let{opacity:n=1,radiusTop:a,radiusBottom:i,depthBuffer:s,color:u="white",distance:f=5,angle:m=.15,attenuation:d=5,anglePower:p=5,volumetric:v=!0,debug:g=!1,children:h,...w}=e;const x=o.useRef(null);return o.createElement("group",null,g&&x.current&&o.createElement("spotLightHelper",{args:[x.current]}),o.createElement("spotLight",(0,r.Z)({ref:(0,l.Z)([t,x]),angle:m,color:u,distance:f,castShadow:!0},w),v&&o.createElement(c,{debug:g,opacity:n,radiusTop:a,radiusBottom:i,depthBuffer:s,color:u,distance:f,angle:m,attenuation:d,anglePower:p})),h&&o.cloneElement(h,{spotlightRef:x,debug:g}))}))},5964:(e,t,n)=>{n.d(t,{H:()=>a});var r=n(7313),o=n(3002);function a(e,t){for(var n=arguments.length,a=new Array(n>2?n-2:0),i=2;i<n;i++)a[i-2]=arguments[i];const l=r.useRef(),s=(0,o.A)((e=>e.scene));return r.useLayoutEffect((()=>{let n;if(e&&null!=e&&e.current&&t&&(l.current=n=new t(e.current,...a)),n)return n.traverse((e=>e.raycast=()=>null)),s.add(n),()=>{l.current=void 0,s.remove(n),null==n.dispose||n.dispose()}}),[s,t,e,...a]),(0,o.C)((()=>{var e;null==(e=l.current)||null==e.update||e.update()})),l}},2362:(e,t,n)=>{n.d(t,{i:()=>o});var r=n(5825);const o=(()=>parseInt(r.REVISION.replace(/\D+/g,"")))()}}]);