"use strict";(self.webpackChunkx_reality=self.webpackChunkx_reality||[]).push([[2239],{3280:(e,n,t)=>{t.d(n,{p:()=>l});var r=t(4704),a=t(5397),o=t(9817);let i;var s;function l(){const{gravity:e,paused:n,showDebug:t}=(0,r.M4)(a.O.SCHEMA.PHYSICS,{gravity:i.gravity(),paused:i.paused(),showDebug:i.showDebug(!0)},o.F.folder(a.O.ORDER.PHYSICS));return{gravity:e,paused:n,showDebug:t}}(s=i||(i={})).gravity=function(){return{label:"Gravity",hint:"Default = 9.81",value:{x:arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,y:arguments.length>1&&void 0!==arguments[1]?arguments[1]:-9.80665,z:arguments.length>2&&void 0!==arguments[2]?arguments[2]:0}}},s.paused=function(){return{label:"Paused",hint:"Pause physics simulation.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}},s.showDebug=function(){return{label:"Debug",hint:"Show debug geometry.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}}},8647:(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var r=t(13),a=t(2952),o=t(4839),i=t(7313),s=t(5825),l=t(1352),u=t(6417);const c=e=>{const[n]=(0,r.Yz)((()=>({args:[.001,.5,1,32],mass:1,position:[0,12,0]})),(0,i.useRef)(null)),[t]=(0,r.xK)((()=>({args:[10,10],rotation:[-s.MathUtils.degToRad(90),0,0]})),(0,i.useRef)(null)),[c]=(0,r.EJ)((()=>({args:[1,1,1],mass:1,position:[-.1,8,0]})),(0,i.useRef)(null)),[d]=(0,r.Eo)((()=>({args:[.5],mass:20,position:[.1,4,0]})),(0,i.useRef)(null));return(0,u.jsxs)("group",{name:"Cannon-es Test",...e,children:[(0,u.jsx)("group",{name:"Floor",children:(0,u.jsx)(a.JO,{args:[10,10],ref:t,receiveShadow:!0,children:(0,u.jsx)(l.F,{})})}),(0,u.jsxs)("group",{name:"Bodies",children:[(0,u.jsx)(a.Qq,{args:[.5,1],castShadow:!0,name:"Cone",ref:n,children:(0,u.jsx)(l.F,{})}),(0,u.jsx)(o.Z,{args:[1,1,1],castShadow:!0,name:"Rounded Box",ref:c,children:(0,u.jsx)(l.F,{})}),(0,u.jsx)(a.aL,{args:[.5,32,32],castShadow:!0,name:"Sphere",ref:d,children:(0,u.jsx)(l.F,{})})]})]})};var d=t(259),m=t(7066),f=t(5819),g=t(4704),v=t(1724),h=t(7862),p=t(4662),w=t(3280);const y={fov:45,position:[7,7,7]},x=e=>{let{children:n}=e;const t=(0,p.p)(),a=(0,w.p)();return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(f.Xz,{camera:y,flat:t.flat,frameloop:t.frameloop,linear:t.linear,orthographic:!1,shadows:t.shadows,children:(0,u.jsxs)(i.Suspense,{children:[(0,u.jsx)(v.Z,{}),(0,u.jsx)(h.u,{}),(0,u.jsx)(d.z,{enableDamping:!0,enablePan:!0,enableZoom:!0}),(0,u.jsx)(r.wI,{gravity:[a.gravity.x,a.gravity.y,a.gravity.z],isPaused:a.paused,children:a.showDebug?(0,u.jsx)(r.cG,{color:16711935,children:n}):n})]})}),(0,u.jsx)(g.Zf,{collapsed:!1,fill:!1,flat:!1,hidden:!1,oneLineLabels:!0,titleBar:!0}),(0,u.jsx)(m.a,{})]})},b=e=>(0,u.jsx)(x,{children:(0,u.jsx)(c,{...e})})},4839:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7462),a=t(7313),o=t(5825),i=t(676);const s=1e-5;const l=a.forwardRef((function(e,n){let{args:[t=1,l=1,u=1]=[],radius:c=.05,steps:d=1,smoothness:m=4,bevelSegments:f=4,creaseAngle:g=.4,children:v,...h}=e;const p=a.useMemo((()=>function(e,n,t){const r=new o.Shape,a=t-s;return r.absarc(s,s,s,-Math.PI/2,-Math.PI,!0),r.absarc(s,n-2*a,s,Math.PI,Math.PI/2,!0),r.absarc(e-2*a,n-2*a,s,Math.PI/2,0,!0),r.absarc(e-2*a,s,s,0,-Math.PI/2,!0),r}(t,l,c)),[t,l,c]),w=a.useMemo((()=>({depth:u-2*c,bevelEnabled:!0,bevelSegments:2*f,steps:d,bevelSize:c-s,bevelThickness:c,curveSegments:m})),[u,c,m]),y=a.useRef(null);return a.useLayoutEffect((()=>{y.current&&(y.current.center(),(0,i.LZ)(y.current,g))}),[p,w]),a.createElement("mesh",(0,r.Z)({ref:n},h),a.createElement("extrudeGeometry",{ref:y,args:[p,w]}),v)}))},3081:(e,n,t)=>{t.d(n,{P:()=>d});var r=t(7462),a=t(7313),o=t(5825),i=t(3002),s=t(4296),l=t(2362);class u extends o.ShaderMaterial{constructor(){super({uniforms:{depth:{value:null},opacity:{value:1},attenuation:{value:2.5},anglePower:{value:12},spotPosition:{value:new o.Vector3(0,0,0)},lightColor:{value:new o.Color("white")},cameraNear:{value:0},cameraFar:{value:1},resolution:{value:new o.Vector2(0,0)}},transparent:!0,depthWrite:!1,vertexShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      ",fragmentShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <".concat(l.i>=154?"colorspace_fragment":"encodings_fragment",">\n        }\n      ")})}}function c(e){let{opacity:n=1,radiusTop:t,radiusBottom:r,depthBuffer:s,color:l="white",distance:c=5,angle:d=.15,attenuation:m=5,anglePower:f=5}=e;const g=a.useRef(null),v=(0,i.A)((e=>e.size)),h=(0,i.A)((e=>e.camera)),p=(0,i.A)((e=>e.viewport.dpr)),[w]=a.useState((()=>new u)),[y]=a.useState((()=>new o.Vector3));t=void 0===t?.1:t,r=void 0===r?7*d:r,(0,i.C)((()=>{w.uniforms.spotPosition.value.copy(g.current.getWorldPosition(y)),g.current.lookAt(g.current.parent.target.getWorldPosition(y))}));const x=a.useMemo((()=>{const e=new o.CylinderGeometry(t,r,c,128,64,!0);return e.applyMatrix4((new o.Matrix4).makeTranslation(0,-c/2,0)),e.applyMatrix4((new o.Matrix4).makeRotationX(-Math.PI/2)),e}),[c,t,r]);return a.createElement(a.Fragment,null,a.createElement("mesh",{ref:g,geometry:x,raycast:()=>null},a.createElement("primitive",{object:w,attach:"material","uniforms-opacity-value":n,"uniforms-lightColor-value":l,"uniforms-attenuation-value":m,"uniforms-anglePower-value":f,"uniforms-depth-value":s,"uniforms-cameraNear-value":h.near,"uniforms-cameraFar-value":h.far,"uniforms-resolution-value":s?[v.width*p,v.height*p]:[0,0]})))}const d=a.forwardRef(((e,n)=>{let{opacity:t=1,radiusTop:o,radiusBottom:i,depthBuffer:l,color:u="white",distance:d=5,angle:m=.15,attenuation:f=5,anglePower:g=5,volumetric:v=!0,debug:h=!1,children:p,...w}=e;const y=a.useRef(null);return a.createElement("group",null,h&&y.current&&a.createElement("spotLightHelper",{args:[y.current]}),a.createElement("spotLight",(0,r.Z)({ref:(0,s.Z)([n,y]),angle:m,color:u,distance:d,castShadow:!0},w),v&&a.createElement(c,{debug:h,opacity:t,radiusTop:o,radiusBottom:i,depthBuffer:l,color:u,distance:d,angle:m,attenuation:f,anglePower:g})),p&&a.cloneElement(p,{spotlightRef:y,debug:h}))}))},2952:(e,n,t)=>{t.d(n,{Ab:()=>u,Cd:()=>s,FC:()=>h,FM:()=>v,JO:()=>d,KC:()=>m,N1:()=>w,Qq:()=>l,aL:()=>c,fg:()=>f,vO:()=>g,xu:()=>i,yI:()=>p});var r=t(7462),a=t(7313);function o(e,n){const t=e+"Geometry";return a.forwardRef(((e,o)=>{let{args:i,children:s,...l}=e;const u=a.useRef(null);return a.useImperativeHandle(o,(()=>u.current)),a.useLayoutEffect((()=>{null==n||n(u.current)})),a.createElement("mesh",(0,r.Z)({ref:u},l),a.createElement(t,{attach:"geometry",args:i}),s)}))}const i=o("box"),s=o("circle"),l=o("cone"),u=o("cylinder"),c=o("sphere"),d=o("plane"),m=o("torus"),f=o("torusKnot"),g=o("tetrahedron"),v=o("ring"),h=o("icosahedron"),p=o("octahedron"),w=o("dodecahedron")},5964:(e,n,t)=>{t.d(n,{H:()=>o});var r=t(7313),a=t(3002);function o(e,n){for(var t=arguments.length,o=new Array(t>2?t-2:0),i=2;i<t;i++)o[i-2]=arguments[i];const s=r.useRef(),l=(0,a.A)((e=>e.scene));return r.useLayoutEffect((()=>{let t;if(e&&null!=e&&e.current&&n&&(s.current=t=new n(e.current,...o)),t)return t.traverse((e=>e.raycast=()=>null)),l.add(t),()=>{s.current=void 0,l.remove(t),null==t.dispose||t.dispose()}}),[l,n,e,...o]),(0,a.C)((()=>{var e;null==(e=s.current)||null==e.update||e.update()})),s}},2362:(e,n,t)=>{t.d(n,{i:()=>a});var r=t(5825);const a=(()=>parseInt(r.REVISION.replace(/\D+/g,"")))()}}]);