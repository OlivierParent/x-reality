"use strict";(self.webpackChunkx_reality=self.webpackChunkx_reality||[]).push([[2411],{6167:(e,t,n)=>{n.d(t,{A:()=>f});var a=n(259),r=n(7066),i=n(5819),o=n(4704),l=n(7313),s=n(4110),u=n(1724),c=n(7862),d=n(4662),p=n(6417);const f=e=>{let{children:t}=e;const n=(0,d.p)();return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(i.Xz,{camera:void 0,flat:n.flat,frameloop:n.frameloop,linear:n.linear,orthographic:!1,shadows:n.shadows,children:(0,p.jsxs)(l.Suspense,{children:[(0,p.jsx)(s.z,{}),(0,p.jsx)(u.Z,{}),(0,p.jsx)(c.u,{}),(0,p.jsx)(a.z,{enableDamping:!0,enablePan:!0,enableZoom:!0}),t]})}),(0,p.jsx)(o.Zf,{collapsed:!1,fill:!1,flat:!1,hidden:!1,oneLineLabels:!0,titleBar:!0}),(0,p.jsx)(r.a,{})]})}},952:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var a=n(4704),r=n(5397),i=n(8202),o=n(8273),l=n(4670);let s;var u;function c(){const{color:e,detail:t,opacity:n,radius:o,size:l,sizeAttenuation:u,transparent:c}=(0,a.M4)(r.O.SCHEMA.COMPONENTS,{"Icosahedron (20 faces)":(0,a.so)({detail:i.L.detail(3),radius:i.L.radius(2)}),"Points Material":(0,a.so)({color:s.color(),opacity:s.opacity(),size:s.size(),sizeAttenuation:s.sizeAttenuation(),transparent:s.transparent()})});return{color:e,detail:t,opacity:n,radius:o,size:l,sizeAttenuation:u,transparent:c}}(u=s||(s={})).color=o.L.color,u.opacity=l.W.opacity,u.size=function(){return{label:"Size",hint:"Defines the size of the points in pixels. Default = 1.0.",max:2,min:.05,step:.01,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},u.sizeAttenuation=function(){return{label:"Size Attenuation",hint:"Specify whether points' size is attenuated by the camera depth. (Perspective camera only.) Default is true.",value:!(arguments.length>0&&void 0!==arguments[0])||arguments[0]}},u.transparent=l.W.transparent;var d=n(6417);const p=()=>{const{color:e,detail:t,opacity:n,radius:a,size:r,sizeAttenuation:i,transparent:o}=c();return(0,d.jsxs)("points",{children:[(0,d.jsx)("icosahedronGeometry",{args:[a,t]}),(0,d.jsx)("pointsMaterial",{color:e,opacity:n,size:r,sizeAttenuation:i,transparent:o})]})};var f=n(8640);const h=n.p+"static/media/Arteveldehogeschool_favicon.209a12d12e07efdfbbdd.png",m=()=>{const{color:e,detail:t,opacity:n,radius:a,size:r,sizeAttenuation:i,transparent:o}=c(),l=(0,f.m)(h);return(0,d.jsxs)("points",{children:[(0,d.jsx)("icosahedronGeometry",{args:[a,t]}),(0,d.jsx)("pointsMaterial",{color:e,map:l,opacity:n,size:r,sizeAttenuation:i,transparent:o})]})};var v=n(9817),g=function(e){return e.DEFAULT="\u2014Default\u2014",e.SPRITES="Sprites",e}(g||{});const y={[g.DEFAULT]:(0,d.jsx)(p,{}),[g.SPRITES]:(0,d.jsx)(m,{})},b=e=>{const{particles:t}=function(e,t){const{particles:n}=(0,a.M4)(r.O.SCHEMA.COMPONENTS,{particles:{label:"Particles",options:e,value:t}},v.F.folder(r.O.ORDER.COMPONENTS));return{particles:n}}(y,y[g.DEFAULT]);return(0,d.jsx)("group",{name:"Particles",...e,children:t})};var x=n(6167);const w=e=>(0,d.jsx)(x.A,{children:(0,d.jsx)(b,{...e})})},4064:(e,t,n)=>{let a;var r;n.d(t,{n:()=>a}),(r=a||(a={})).radius=function(){return{label:"Radius",hint:"Radius of the circle. Default is `1.0`.",max:3,min:.1,step:.1,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},r.segments=function(){return{label:"Segments",hint:"Number of segments (triangles). Default is `8`, minimum is `3`.",max:64,min:3,step:1,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:8}},r.\u0398Length=function(){return{label:"\u0398 Length (degrees)",hint:"The central angle (theta) of the circular sector in degrees (converted to radians). Default is `360.0` (full circle).",max:360,min:-360,step:.1,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:360}},r.\u0398Start=function(){return{label:"\u0398 Start (degrees)",hint:"Start angle (theta) for first segment in degrees (converted to radians). Default is `0.0` (three o'clock position).",max:360,min:-360,step:.1,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:0}}},8202:(e,t,n)=>{n.d(t,{L:()=>i});var a=n(4064),r=n(3923);let i;var o;(o=i||(i={})).detail=r.f.detail,o.radius=a.n.radius},3923:(e,t,n)=>{n.d(t,{f:()=>r});var a=n(4064);let r;var i;(i=r||(r={})).detail=function(){return{label:"Detail",hint:"Default is 0.",max:8,min:0,step:1,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:0}},i.radius=a.n.radius},8273:(e,t,n)=>{n.d(t,{L:()=>r});var a=n(5825);let r;var i;(i=r||(r={})).alphaMap=function(){return{label:"Alpha Map",hint:"The alpha map is a grayscale texture that controls the opacity across the surface (black: fully transparent; white: fully opaque).",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.aoMap=function(){return{label:"Ambient Occlusion Map",hint:"The red channel of this texture is used as the ambient occlusion map. The aoMap requires a second set of UVs.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.aoMapIntensity=function(){return{label:"Ambient Occlusion Map Intensity",hint:"Intensity of the ambient occlusion effect. Zero is no occlusion effect.",max:1,min:0,step:.01,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},i.color=function(){return{label:"Color",hint:"Color of the material.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#ffffff"}},i.combine=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.MultiplyOperation;return{label:"Color",hint:"How to combine the result of the surface's color with the environment map, if any.",options:[a.AddOperation,a.MixOperation,a.MultiplyOperation],value:e}},i.envMap=function(){return{label:"Environment Map",hint:"The environment map.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.lightMap=function(){return{label:"Light Map",hint:"The light map. The lightMap requires a second set of UVs.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.lightMapIntensity=function(){return{label:"Light Map Intensity",hint:"Intensity of the baked light.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},i.map=function(){return{label:"Map",hint:"The color map.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.reflectivity=function(){return{label:"Reflectivity",hint:"How much the environment map affects the surface; also see .combine. The default value is 1 and the valid range is between 0 (no reflections) and 1 (full reflections).",max:1,min:0,step:.01,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},i.refractionRatio=function(){return{label:"Refraction Ratio",hint:"The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of the material. It is used with environment mapping modes THREE.CubeRefractionMapping and THREE.EquirectangularRefractionMapping. The refraction ratio should not exceed 1.",max:1,min:0,step:.01,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:.98}},i.specularMap=function(){return{label:"Specular Map",hint:"Specular map used by the material.",value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},i.wireframe=function(){return{label:"Wireframe",hint:"Render geometry as wireframe. Default is false (i.e. render as flat polygons).",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}}},4670:(e,t,n)=>{n.d(t,{W:()=>r});var a=n(5825);let r;var i;(i=r||(r={})).dithering=function(){return{label:"Dithering",hint:"Whether to apply dithering to the color to remove the appearance of banding.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}},i.opacity=function(){return{label:"Opacity",hint:"Float in the range of 0.0 - 1.0 indicating how transparent the material is. A value of 0.0 indicates fully transparent, 1.0 is fully opaque.\nIf the material's transparent property is not set to true, the material will remain fully opaque and this value will only affect its color.",max:1,min:0,step:.01,value:arguments.length>0&&void 0!==arguments[0]?arguments[0]:1}},i.side=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.FrontSide;return{label:"Normals",hint:"Defines which side of faces will be rendered - front, back or both.",options:{BackSide:a.BackSide,DoubleSide:a.DoubleSide,FrontSide:a.FrontSide},value:e}},i.transparent=function(){return{label:"Transparent",hint:"Defines whether this material is transparent. This has an effect on rendering as transparent objects need special treatment and are rendered after non-transparent objects.\nWhen set to true, the extent to which the material is transparent is controlled by setting its opacity property.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}}},3081:(e,t,n)=>{n.d(t,{P:()=>d});var a=n(7462),r=n(7313),i=n(5825),o=n(6351),l=n(4296),s=n(2362);class u extends i.ShaderMaterial{constructor(){super({uniforms:{depth:{value:null},opacity:{value:1},attenuation:{value:2.5},anglePower:{value:12},spotPosition:{value:new i.Vector3(0,0,0)},lightColor:{value:new i.Color("white")},cameraNear:{value:0},cameraFar:{value:1},resolution:{value:new i.Vector2(0,0)}},transparent:!0,depthWrite:!1,vertexShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      ",fragmentShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <".concat(s.i>=154?"colorspace_fragment":"encodings_fragment",">\n        }\n      ")})}}function c(e){let{opacity:t=1,radiusTop:n,radiusBottom:a,depthBuffer:l,color:s="white",distance:c=5,angle:d=.15,attenuation:p=5,anglePower:f=5}=e;const h=r.useRef(null),m=(0,o.A)((e=>e.size)),v=(0,o.A)((e=>e.camera)),g=(0,o.A)((e=>e.viewport.dpr)),[y]=r.useState((()=>new u)),[b]=r.useState((()=>new i.Vector3));n=void 0===n?.1:n,a=void 0===a?7*d:a,(0,o.C)((()=>{y.uniforms.spotPosition.value.copy(h.current.getWorldPosition(b)),h.current.lookAt(h.current.parent.target.getWorldPosition(b))}));const x=r.useMemo((()=>{const e=new i.CylinderGeometry(n,a,c,128,64,!0);return e.applyMatrix4((new i.Matrix4).makeTranslation(0,-c/2,0)),e.applyMatrix4((new i.Matrix4).makeRotationX(-Math.PI/2)),e}),[c,n,a]);return r.createElement(r.Fragment,null,r.createElement("mesh",{ref:h,geometry:x,raycast:()=>null},r.createElement("primitive",{object:y,attach:"material","uniforms-opacity-value":t,"uniforms-lightColor-value":s,"uniforms-attenuation-value":p,"uniforms-anglePower-value":f,"uniforms-depth-value":l,"uniforms-cameraNear-value":v.near,"uniforms-cameraFar-value":v.far,"uniforms-resolution-value":l?[m.width*g,m.height*g]:[0,0]})))}const d=r.forwardRef(((e,t)=>{let{opacity:n=1,radiusTop:i,radiusBottom:o,depthBuffer:s,color:u="white",distance:d=5,angle:p=.15,attenuation:f=5,anglePower:h=5,volumetric:m=!0,debug:v=!1,children:g,...y}=e;const b=r.useRef(null);return r.createElement("group",null,v&&b.current&&r.createElement("spotLightHelper",{args:[b.current]}),r.createElement("spotLight",(0,a.Z)({ref:(0,l.Z)([t,b]),angle:p,color:u,distance:d,castShadow:!0},y),m&&r.createElement(c,{debug:v,opacity:n,radiusTop:i,radiusBottom:o,depthBuffer:s,color:u,distance:d,angle:p,attenuation:f,anglePower:h})),g&&r.cloneElement(g,{spotlightRef:b,debug:v}))}))},5964:(e,t,n)=>{n.d(t,{H:()=>i});var a=n(7313),r=n(6351);function i(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];const l=a.useRef(),s=(0,r.A)((e=>e.scene));return a.useLayoutEffect((()=>{let n;if(e&&null!=e&&e.current&&t&&(l.current=n=new t(e.current,...i)),n)return n.traverse((e=>e.raycast=()=>null)),s.add(n),()=>{l.current=void 0,s.remove(n),null==n.dispose||n.dispose()}}),[s,t,e,...i]),(0,r.C)((()=>{var e;null==(e=l.current)||null==e.update||e.update()})),l}},8640:(e,t,n)=>{n.d(t,{m:()=>l});var a=n(5825),r=n(6351),i=n(7313);const o=e=>e===Object(e)&&!Array.isArray(e)&&"function"!==typeof e;function l(e,t){const n=(0,r.A)((e=>e.gl)),l=(0,r.F)(a.TextureLoader,o(e)?Object.values(e):e);if((0,i.useLayoutEffect)((()=>{null==t||t(l)}),[t]),(0,i.useEffect)((()=>{if("initTexture"in n){(Array.isArray(l)?l:[l]).forEach(n.initTexture)}}),[n,l]),o(e)){const t={};let n=0;for(const a in e)t[a]=l[n++];return t}return l}l.preload=e=>r.F.preload(a.TextureLoader,e),l.clear=e=>r.F.clear(a.TextureLoader,e)},2362:(e,t,n)=>{n.d(t,{i:()=>r});var a=n(5825);const r=(()=>parseInt(a.REVISION.replace(/\D+/g,"")))()}}]);