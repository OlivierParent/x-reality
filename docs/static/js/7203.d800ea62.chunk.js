"use strict";(self.webpackChunkx_reality=self.webpackChunkx_reality||[]).push([[7203],{3280:(e,n,t)=>{t.d(n,{p:()=>s});var r=t(4704),a=t(5397),o=t(9817);let i;var l;function s(){const{gravity:e,paused:n,showDebug:t}=(0,r.M4)(a.O.SCHEMA.PHYSICS,{gravity:i.gravity(),paused:i.paused(),showDebug:i.showDebug(!0)},o.F.folder(a.O.ORDER.PHYSICS));return{gravity:e,paused:n,showDebug:t}}(l=i||(i={})).gravity=function(){return{label:"Gravity",hint:"Default = 9.81",value:{x:arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,y:arguments.length>1&&void 0!==arguments[1]?arguments[1]:-9.80665,z:arguments.length>2&&void 0!==arguments[2]?arguments[2]:0}}},l.paused=function(){return{label:"Paused",hint:"Pause physics simulation.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}},l.showDebug=function(){return{label:"Debug",hint:"Show debug geometry.",value:arguments.length>0&&void 0!==arguments[0]&&arguments[0]}}},1946:(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var r=t(2952),a=t(4839),o=t(3082),i=t(5825),l=t(1352),s=t(6417);const u=e=>(0,s.jsxs)("group",{name:"Rapier Test",...e,children:[(0,s.jsx)("group",{name:"Floor",children:(0,s.jsx)(o.ib,{type:"fixed",children:(0,s.jsx)(r.JO,{args:[20,20],receiveShadow:!0,rotation:[i.MathUtils.degToRad(-90),0,0],children:(0,s.jsx)(l.F,{})})})}),(0,s.jsxs)("group",{name:"Bodies",children:[(0,s.jsx)(o.ib,{colliders:!1,mass:2,name:"Cone",position:[0,12,0],type:"dynamic",children:(0,s.jsx)(o.aF,{args:[.5,.5],children:(0,s.jsx)(r.Qq,{args:[.5,1],castShadow:!0,children:(0,s.jsx)(l.F,{})})})}),(0,s.jsx)(o.ib,{mass:1,name:"Rounded Box",position:[-.1,8,0],type:"dynamic",children:(0,s.jsx)(a.Z,{args:[1,1,1],castShadow:!0,children:(0,s.jsx)(l.F,{})})}),(0,s.jsx)(o.ib,{colliders:"ball",mass:20,name:"Sphere",position:[.1,4,0],type:"dynamic",children:(0,s.jsx)(r.aL,{args:[.5,32,32],castShadow:!0,children:(0,s.jsx)(l.F,{})})})]})]});var c=t(259),d=t(7066),m=t(5819),v=t(4704),p=t(7313),g=t(1724),h=t(7862),f=t(4662),y=t(3280);const w={fov:45,position:[7,7,7]},x=e=>{let{children:n}=e;const t=(0,f.p)(),r=(0,y.p)();return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m.Xz,{camera:w,flat:t.flat,frameloop:t.frameloop,linear:t.linear,orthographic:!1,shadows:t.shadows,children:(0,s.jsxs)(p.Suspense,{children:[(0,s.jsx)(g.Z,{}),(0,s.jsx)(h.u,{}),(0,s.jsx)(c.z,{enableDamping:!0,enablePan:!0,enableZoom:!0}),(0,s.jsx)(o.wI,{colliders:void 0,debug:r.showDebug,gravity:[r.gravity.x,r.gravity.y,r.gravity.z],paused:r.paused,timeStep:"vary",updatePriority:void 0,children:n})]})}),(0,s.jsx)(v.Zf,{collapsed:!1,fill:!1,flat:!1,hidden:!1,oneLineLabels:!0,titleBar:!0}),(0,s.jsx)(d.a,{})]})},b=e=>(0,s.jsx)(x,{children:(0,s.jsx)(u,{...e})})},4839:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7462),a=t(7313),o=t(5825),i=t(676);const l=1e-5;const s=a.forwardRef((function(e,n){let{args:[t=1,s=1,u=1]=[],radius:c=.05,steps:d=1,smoothness:m=4,bevelSegments:v=4,creaseAngle:p=.4,children:g,...h}=e;const f=a.useMemo((()=>function(e,n,t){const r=new o.Shape,a=t-l;return r.absarc(l,l,l,-Math.PI/2,-Math.PI,!0),r.absarc(l,n-2*a,l,Math.PI,Math.PI/2,!0),r.absarc(e-2*a,n-2*a,l,Math.PI/2,0,!0),r.absarc(e-2*a,l,l,0,-Math.PI/2,!0),r}(t,s,c)),[t,s,c]),y=a.useMemo((()=>({depth:u-2*c,bevelEnabled:!0,bevelSegments:2*v,steps:d,bevelSize:c-l,bevelThickness:c,curveSegments:m})),[u,c,m]),w=a.useRef(null);return a.useLayoutEffect((()=>{w.current&&(w.current.center(),(0,i.LZ)(w.current,p))}),[f,y]),a.createElement("mesh",(0,r.Z)({ref:n},h),a.createElement("extrudeGeometry",{ref:w,args:[f,y]}),g)}))},3081:(e,n,t)=>{t.d(n,{P:()=>d});var r=t(7462),a=t(7313),o=t(5825),i=t(3002),l=t(4296),s=t(2362);class u extends o.ShaderMaterial{constructor(){super({uniforms:{depth:{value:null},opacity:{value:1},attenuation:{value:2.5},anglePower:{value:12},spotPosition:{value:new o.Vector3(0,0,0)},lightColor:{value:new o.Color("white")},cameraNear:{value:0},cameraFar:{value:1},resolution:{value:new o.Vector2(0,0)}},transparent:!0,depthWrite:!1,vertexShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      ",fragmentShader:"\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <".concat(s.i>=154?"colorspace_fragment":"encodings_fragment",">\n        }\n      ")})}}function c(e){let{opacity:n=1,radiusTop:t,radiusBottom:r,depthBuffer:l,color:s="white",distance:c=5,angle:d=.15,attenuation:m=5,anglePower:v=5}=e;const p=a.useRef(null),g=(0,i.A)((e=>e.size)),h=(0,i.A)((e=>e.camera)),f=(0,i.A)((e=>e.viewport.dpr)),[y]=a.useState((()=>new u)),[w]=a.useState((()=>new o.Vector3));t=void 0===t?.1:t,r=void 0===r?7*d:r,(0,i.C)((()=>{y.uniforms.spotPosition.value.copy(p.current.getWorldPosition(w)),p.current.lookAt(p.current.parent.target.getWorldPosition(w))}));const x=a.useMemo((()=>{const e=new o.CylinderGeometry(t,r,c,128,64,!0);return e.applyMatrix4((new o.Matrix4).makeTranslation(0,-c/2,0)),e.applyMatrix4((new o.Matrix4).makeRotationX(-Math.PI/2)),e}),[c,t,r]);return a.createElement(a.Fragment,null,a.createElement("mesh",{ref:p,geometry:x,raycast:()=>null},a.createElement("primitive",{object:y,attach:"material","uniforms-opacity-value":n,"uniforms-lightColor-value":s,"uniforms-attenuation-value":m,"uniforms-anglePower-value":v,"uniforms-depth-value":l,"uniforms-cameraNear-value":h.near,"uniforms-cameraFar-value":h.far,"uniforms-resolution-value":l?[g.width*f,g.height*f]:[0,0]})))}const d=a.forwardRef(((e,n)=>{let{opacity:t=1,radiusTop:o,radiusBottom:i,depthBuffer:s,color:u="white",distance:d=5,angle:m=.15,attenuation:v=5,anglePower:p=5,volumetric:g=!0,debug:h=!1,children:f,...y}=e;const w=a.useRef(null);return a.createElement("group",null,h&&w.current&&a.createElement("spotLightHelper",{args:[w.current]}),a.createElement("spotLight",(0,r.Z)({ref:(0,l.Z)([n,w]),angle:m,color:u,distance:d,castShadow:!0},y),g&&a.createElement(c,{debug:h,opacity:t,radiusTop:o,radiusBottom:i,depthBuffer:s,color:u,distance:d,angle:m,attenuation:v,anglePower:p})),f&&a.cloneElement(f,{spotlightRef:w,debug:h}))}))},2952:(e,n,t)=>{t.d(n,{Ab:()=>u,Cd:()=>l,FC:()=>h,FM:()=>g,JO:()=>d,KC:()=>m,N1:()=>y,Qq:()=>s,aL:()=>c,fg:()=>v,vO:()=>p,xu:()=>i,yI:()=>f});var r=t(7462),a=t(7313);function o(e,n){const t=e+"Geometry";return a.forwardRef(((e,o)=>{let{args:i,children:l,...s}=e;const u=a.useRef(null);return a.useImperativeHandle(o,(()=>u.current)),a.useLayoutEffect((()=>{null==n||n(u.current)})),a.createElement("mesh",(0,r.Z)({ref:u},s),a.createElement(t,{attach:"geometry",args:i}),l)}))}const i=o("box"),l=o("circle"),s=o("cone"),u=o("cylinder"),c=o("sphere"),d=o("plane"),m=o("torus"),v=o("torusKnot"),p=o("tetrahedron"),g=o("ring"),h=o("icosahedron"),f=o("octahedron"),y=o("dodecahedron")},5964:(e,n,t)=>{t.d(n,{H:()=>o});var r=t(7313),a=t(3002);function o(e,n){for(var t=arguments.length,o=new Array(t>2?t-2:0),i=2;i<t;i++)o[i-2]=arguments[i];const l=r.useRef(),s=(0,a.A)((e=>e.scene));return r.useLayoutEffect((()=>{let t;if(e&&null!=e&&e.current&&n&&(l.current=t=new n(e.current,...o)),t)return t.traverse((e=>e.raycast=()=>null)),s.add(t),()=>{l.current=void 0,s.remove(t),null==t.dispose||t.dispose()}}),[s,n,e,...o]),(0,a.C)((()=>{var e;null==(e=l.current)||null==e.update||e.update()})),l}},2362:(e,n,t)=>{t.d(n,{i:()=>a});var r=t(5825);const a=(()=>parseInt(r.REVISION.replace(/\D+/g,"")))()}}]);